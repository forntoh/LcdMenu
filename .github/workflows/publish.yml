name: Publish Library to PIO Registry

on:
  workflow_dispatch:
    inputs:
      part_to_increment:
        description: "Part to increment (1 for major, 2 for minor, 3 for patch)"
        required: true

jobs:
  publish:
    name: Prepare Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install click
          pip install --upgrade platformio

      - name: Login to PlatformIO
        run: |
          pio account login -u "${{ secrets.PIO_USERNAME }}" -p "${{ secrets.PIO_PASSWORD }}"

      - name: Update Version
        env:
          PART_TO_INCREMENT: ${{ github.event.inputs.part_to_increment }}
        run: |
          chmod +x version
          ./version "$PART_TO_INCREMENT"
          echo "UPDATED_VERSION=$(grep "version=" library.properties | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update version to $UPDATED_VERSION"
          git push origin master

      - name: Create Tag
        if: ${{ env.UPDATED_VERSION != '' }}
        run: |
          git tag -a "${{ env.UPDATED_VERSION }}" -m "Tagging version ${{ env.UPDATED_VERSION }}"
          git push origin "${{ env.UPDATED_VERSION }}"

      - name: Publish to PlatformIO
        run: yes y | pio pkg publish

      - name: Create GitHub Release
        if: ${{ env.UPDATED_VERSION != '' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "${{ env.UPDATED_VERSION }}",
              "target_commitish": "master",
              "name": "LcdMenu ${{ env.UPDATED_VERSION }}",
              "draft": true,
              "prerelease": false
            }' \
            "https://api.github.com/repos/${{ github.repository }}/releases"
